import "ray.lx" as ray
import "record.lx"
import "vec3.lx" as vec3

type lambertian {
    [([], ray, record, mut color, mut ray) => u1] scatter,

    color albedo,
}

scatter(lambertian self, ray r_in, record rec, mut color attenuation, mut ray scattered) => u1 = (
    dir := vec3.add(rec.normal, vec3.random_unit_vector()),

    scatter_direction := vec3.near_zero(dir) ? rec.normal : dir,

    scattered = ray.create(rec.p, scatter_direction),
    attenuation = self.albedo,
    1
)

export create(color albedo) => lambertian = {
    $([] ptr, ray r_in, record rec, mut color attenuation, mut ray scattered) => u1
     = scatter(*(ptr as [lambertian]), r_in, rec, attenuation, scattered),

    albedo,
} => lambertian
